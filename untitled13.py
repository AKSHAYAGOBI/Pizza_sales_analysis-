# -*- coding: utf-8 -*-
"""Untitled13.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gf0uipd8TRPaSgr99JYRsRqo-lMJW5hm
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Load the dataset
data = pd.read_csv('/content/pizza_sales.csv')

# Preview the dataset
print(data.head())

# Convert the 'order_date' column to datetime format
if 'order_date' in data.columns:
    # Attempt to convert without specifying a format
    data['order_date'] = pd.to_datetime(data['order_date'], errors='coerce', dayfirst=True)  # Set dayfirst=True if dates are in day-month-year format
    # Extract Year and Month
    data['Year'] = data['order_date'].dt.year
    data['Month'] = data['order_date'].dt.month
else:
    print("Error: 'order_date' column not found in the dataset. Cannot extract Year and Month.")

# Data Cleaning: Check for missing values
print("Missing values per column:")
print(data.isnull().sum())

# Fill missing values if necessary (optional step)
data = data.fillna(0)

# Aggregate sales data by month and year
if 'quantity' in data.columns and 'total_price' in data.columns:
    monthly_sales = data.groupby(['Year', 'Month']).agg({'quantity': 'sum', 'total_price': 'sum'}).reset_index()
    # Rename columns for consistency with later code
    monthly_sales = monthly_sales.rename(columns={'quantity': 'Sales', 'total_price': 'Revenue'})
else:
    print("Error: 'quantity' and/or 'total_price' columns not found in the dataset.")

# Sales Trend over Time
plt.figure(figsize=(10, 6))
if 'Sales' in monthly_sales.columns:
    sns.lineplot(x='Month', y='Sales', hue='Year', data=monthly_sales, marker='o')
    plt.title('Monthly Sales Trend Over Years')
    plt.xlabel('Month')
    plt.ylabel('Sales')
    plt.grid(True)
    plt.show()

# Revenue comparison by Month
plt.figure(figsize=(10, 6))
if 'Revenue' in monthly_sales.columns:
    sns.barplot(x='Month', y='Revenue', data=monthly_sales, ci=None)
    plt.title('Monthly Revenue Comparison')
    plt.xlabel('Month')
    plt.ylabel('Revenue')
    plt.grid(True)
    plt.show()

# Optional: Product-Wise Sales Distribution if 'pizza_name' column is present
if 'pizza_name' in data.columns and 'quantity' in data.columns:
    plt.figure(figsize=(12, 6))
    sns.boxplot(x='pizza_name', y='quantity', data=data)
    plt.title('Product-Wise Sales Distribution')
    plt.xticks(rotation=90)
    plt.grid(True)
    plt.tight_layout()
    plt.show()

# Correlation between Sales and Revenue
plt.figure(figsize=(8, 6))
if 'quantity' in data.columns and 'total_price' in data.columns:
    sns.scatterplot(x='quantity', y='total_price', data=data)
    plt.title('Correlation between Sales and Revenue')
    plt.grid(True)
    plt.show()